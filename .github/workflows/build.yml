name: Build Wheels (abi3)

on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Wheels ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            cibw_arch: x86_64
          - os: ubuntu-latest
            cibw_arch: aarch64
          - os: macos-13
            cibw_arch: x86_64
          - os: macos-latest
            cibw_arch: arm64
          - os: windows-latest
            cibw_arch: AMD64

    env:
      # abi3：每平台仅构一次（最低版本 3.10）
      CIBW_BUILD: "cp310-*"
      CIBW_SKIP: "*-win32 *-manylinux_i686"
      CIBW_ARCHS_LINUX: ${{ matrix.cibw_arch }}
      CIBW_ARCHS_MACOS: ${{ matrix.cibw_arch }}
      CIBW_ARCHS_WINDOWS: ${{ matrix.cibw_arch }}
      # 可选：如需提升 manylinux 基线
      # CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
      # CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
      # 冒烟测试：导入模块并打印版本
      CIBW_TEST_COMMAND: "python -c \"import word2vec_matryoshka as m; print(getattr(m, '__version__', 'ok'))\""

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheels (abi3)
        uses: pypa/cibuildwheel@v3.1.4
        with:
          package-dir: .

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_arch }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Source dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 仅给 sdist 提供一个可用的 Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist .

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
